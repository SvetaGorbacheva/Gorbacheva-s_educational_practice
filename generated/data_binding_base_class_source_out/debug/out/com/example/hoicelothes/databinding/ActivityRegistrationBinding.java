// Generated by view binder compiler. Do not edit!
package com.example.hoicelothes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hoicelothes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegistrationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonRegister;

  @NonNull
  public final TextView errorMessage;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final EditText registerConfirmPassword;

  @NonNull
  public final EditText registerEditEmail;

  @NonNull
  public final EditText registerEditPassword;

  @NonNull
  public final TextView textRegister;

  private ActivityRegistrationBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonRegister, @NonNull TextView errorMessage,
      @NonNull ConstraintLayout main, @NonNull EditText registerConfirmPassword,
      @NonNull EditText registerEditEmail, @NonNull EditText registerEditPassword,
      @NonNull TextView textRegister) {
    this.rootView = rootView;
    this.buttonRegister = buttonRegister;
    this.errorMessage = errorMessage;
    this.main = main;
    this.registerConfirmPassword = registerConfirmPassword;
    this.registerEditEmail = registerEditEmail;
    this.registerEditPassword = registerEditPassword;
    this.textRegister = textRegister;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegistrationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegistrationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_registration, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegistrationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_register;
      Button buttonRegister = ViewBindings.findChildViewById(rootView, id);
      if (buttonRegister == null) {
        break missingId;
      }

      id = R.id.error_message;
      TextView errorMessage = ViewBindings.findChildViewById(rootView, id);
      if (errorMessage == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.register_confirm_password;
      EditText registerConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (registerConfirmPassword == null) {
        break missingId;
      }

      id = R.id.register_edit_email;
      EditText registerEditEmail = ViewBindings.findChildViewById(rootView, id);
      if (registerEditEmail == null) {
        break missingId;
      }

      id = R.id.register_edit_password;
      EditText registerEditPassword = ViewBindings.findChildViewById(rootView, id);
      if (registerEditPassword == null) {
        break missingId;
      }

      id = R.id.text_register;
      TextView textRegister = ViewBindings.findChildViewById(rootView, id);
      if (textRegister == null) {
        break missingId;
      }

      return new ActivityRegistrationBinding((ConstraintLayout) rootView, buttonRegister,
          errorMessage, main, registerConfirmPassword, registerEditEmail, registerEditPassword,
          textRegister);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
